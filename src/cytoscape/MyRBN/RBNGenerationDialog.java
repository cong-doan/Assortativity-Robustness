/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AboutDialog.java
 *
 * Created on Dec 3, 2010, 3:53:53 PM
 */

package cytoscape.MyRBN;

import cytoscape.Cytoscape;
import cytoscape.task.ui.JTaskConfig;
import cytoscape.task.util.TaskManager;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import myrbn.MyRBN;

/**
 *
 * @author Administrator
 */
public class RBNGenerationDialog extends javax.swing.JDialog {

    public static String RBNModel;

    public RBNGenerationDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public RBNGenerationDialog() {
        super(Cytoscape.getDesktop(), "Random Network Generation...");
        initComponents();

        //EventListener el = new EventListener();
        
        this.cboRBNModel.removeAllItems();
        this.cboRBNModel.addItem("Barabási-Albert");
        this.cboRBNModel.addItem("Erdős-Rényi");
        this.cboRBNModel.addItem("Erdős-Rényi Variant");

        this.cboRBNModel.setSelectedIndex(2);
//        this.setBounds(0, 0, 548, 213);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgERNVariant = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cboRBNModel = new javax.swing.JComboBox();
        btnCreateNetwork = new javax.swing.JButton();
        pnlOther = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblNumIna_ProbIna_MiniIna = new javax.swing.JLabel();
        txtNumOfNode = new javax.swing.JTextField();
        txtNumOfIna = new javax.swing.JTextField();
        radMethod1 = new javax.swing.JRadioButton();
        radMethod0 = new javax.swing.JRadioButton();
        lblInitNodes = new javax.swing.JLabel();
        txtNumInitNode = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Random Boolean Network Generation");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Random Boolean Network Generation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel2.setLayout(null);

        jLabel4.setText("Model");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(20, 20, 30, 20);

        cboRBNModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboRBNModelActionPerformed(evt);
            }
        });
        jPanel2.add(cboRBNModel);
        cboRBNModel.setBounds(60, 20, 142, 22);

        btnCreateNetwork.setText("Create");
        btnCreateNetwork.setName("btnCreateNetwork"); // NOI18N
        btnCreateNetwork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNetworkActionPerformed(evt);
            }
        });
        jPanel2.add(btnCreateNetwork);
        btnCreateNetwork.setBounds(210, 20, 70, 23);

        pnlOther.setBorder(javax.swing.BorderFactory.createTitledBorder("Choose Parameters"));
        pnlOther.setLayout(null);

        jLabel2.setText("Number of Nodes (|V|)");
        pnlOther.add(jLabel2);
        jLabel2.setBounds(20, 30, 190, 14);

        lblNumIna_ProbIna_MiniIna.setText("Number of Interactions (|A|)");
        lblNumIna_ProbIna_MiniIna.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        pnlOther.add(lblNumIna_ProbIna_MiniIna);
        lblNumIna_ProbIna_MiniIna.setBounds(20, 50, 190, 40);

        txtNumOfNode.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNumOfNode.setText("10");
        txtNumOfNode.setName("txtNumOfNode"); // NOI18N
        pnlOther.add(txtNumOfNode);
        txtNumOfNode.setBounds(220, 30, 37, 20);

        txtNumOfIna.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNumOfIna.setText("20");
        txtNumOfIna.setName("txtNumOfIna"); // NOI18N
        pnlOther.add(txtNumOfIna);
        txtNumOfIna.setBounds(220, 60, 37, 20);

        btgERNVariant.add(radMethod1);
        radMethod1.setText("At least 1 in-coming  and 1 out-going Link");
        pnlOther.add(radMethod1);
        radMethod1.setBounds(20, 110, 230, 20);

        btgERNVariant.add(radMethod0);
        radMethod0.setSelected(true);
        radMethod0.setText("At least 1 Link");
        pnlOther.add(radMethod0);
        radMethod0.setBounds(20, 80, 110, 30);

        lblInitNodes.setText("Number of Initial Nodes (e)");
        pnlOther.add(lblInitNodes);
        lblInitNodes.setBounds(20, 90, 190, 20);

        txtNumInitNode.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNumInitNode.setText("3");
        pnlOther.add(txtNumInitNode);
        txtNumInitNode.setBounds(220, 90, 38, 20);

        jPanel2.add(pnlOther);
        pnlOther.setBounds(10, 50, 280, 140);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(309, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboRBNModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboRBNModelActionPerformed
        // TODO add your handling code here:
        if(this.cboRBNModel.getSelectedIndex()==0){ //Barabasi Albert
            //this.lblNumIna_ProbIna_MiniIna.setText("Minimum Interactions per node (d)   ");
            this.lblNumIna_ProbIna_MiniIna.setText("<HTML>Number of Interactions added<BR>at each step (d)<HTML>");
            this.lblNumIna_ProbIna_MiniIna.setVerticalAlignment(SwingConstants.CENTER);
            this.lblInitNodes.setVisible(true);
            this.txtNumInitNode.setVisible(true);
            this.radMethod0.setVisible(false);
            this.radMethod1.setVisible(false);
            //CreateNetworkTask.RBNModel="BarabasiAlbert";
            this.txtNumOfIna.setText("2");
            this.txtNumInitNode.setText("3");
        }else if(this.cboRBNModel.getSelectedIndex()==1){ //Erdos Renyi G(n,p)
            this.lblNumIna_ProbIna_MiniIna.setText("Attached Prob of Interactions (p)");
            this.lblNumIna_ProbIna_MiniIna.setVerticalAlignment(SwingConstants.CENTER);
            this.lblInitNodes.setVisible(false);
            this.txtNumInitNode.setVisible(false);
            this.radMethod0.setVisible(false);
            this.radMethod1.setVisible(false);
            this.txtNumOfIna.setText("0.05");
            //CreateNetworkTask.RBNModel="ErdosRenyi";
        }else{ //ErdosRenyiVariant
            this.lblNumIna_ProbIna_MiniIna.setText("Number of Interactions (|A|)");
            this.lblNumIna_ProbIna_MiniIna.setVerticalAlignment(SwingConstants.CENTER);
            this.lblInitNodes.setVisible(false);
            this.txtNumInitNode.setVisible(false);
            this.radMethod0.setVisible(true);
            this.radMethod1.setVisible(true);
            //CreateNetworkTask.RBNModel="ErdosRenyiVariant";
            this.txtNumOfIna.setText("20");
        }
}//GEN-LAST:event_cboRBNModelActionPerformed

    private void btnCreateNetworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNetworkActionPerformed
        CreateNetworkTask.successful=false;
        try{
            if(Integer.parseInt(this.txtNumOfNode.getText())<3){
                JOptionPane.showMessageDialog(Cytoscape.getDesktop(), "Number of nodes should be greater than or equal to 3","Notice",JOptionPane.WARNING_MESSAGE);
                return;
            }
            // Execute Task in New Thread; pops open JTask Dialog Box.
            if(this.cboRBNModel.getSelectedIndex()==0){ //Barabasi Albert
                if(Integer.parseInt(this.txtNumOfIna.getText())<1){
                    JOptionPane.showMessageDialog(Cytoscape.getDesktop(), "Minimum interactions per node should be greater than or equal to 1","Notice",JOptionPane.WARNING_MESSAGE);
                    return;
                }
                if(Integer.parseInt(this.txtNumInitNode.getText())<2 ||Integer.parseInt(this.txtNumOfIna.getText())> Integer.parseInt(this.txtNumOfNode.getText())){
                    JOptionPane.showMessageDialog(Cytoscape.getDesktop(), "Initial number of nodes should be between 2 and " + this.txtNumOfNode.getText(),"Notice",JOptionPane.WARNING_MESSAGE);
                    return;
                }
                RBNModel="BarabasiAlbert";

            }else if(this.cboRBNModel.getSelectedIndex()==1){ //Erdos Renyi
                if(Double.parseDouble(this.txtNumOfIna.getText())<0 ||Double.parseDouble(this.txtNumOfIna.getText())> 1){
                    JOptionPane.showMessageDialog(Cytoscape.getDesktop(), "Attached probability of interaction should be between 0 and 1","Notice",JOptionPane.WARNING_MESSAGE);
                    return;
                }
                RBNModel="ErdosRenyi";
            }else{ //ErdosRenyiVariant
                if(this.radMethod0.isSelected()){
                    if(Integer.parseInt(this.txtNumOfIna.getText())<Integer.parseInt(this.txtNumOfNode.getText())){
                        JOptionPane.showMessageDialog(Cytoscape.getDesktop(), "Number of Interactions should be greater than or equal to " + this.txtNumOfNode.getText(),"Notice",JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }else{
                    //                    if(Integer.parseInt(this.txtNumOfIna.getText())<1.5*Integer.parseInt(this.txtNumOfNode.getText())){
                    //                        JOptionPane.showMessageDialog(Cytoscape.getDesktop(), "Number of Interactions should be greater than or equal to " + (1.5*Integer.parseInt(this.txtNumOfNode.getText())),"Notice",JOptionPane.WARNING_MESSAGE);
                    //                        return;
                    //                    }
                }
                if(Integer.parseInt(this.txtNumOfIna.getText())>(Integer.parseInt(this.txtNumOfNode.getText()))*(Integer.parseInt(this.txtNumOfNode.getText())-1)){
                    JOptionPane.showMessageDialog(Cytoscape.getDesktop(), "Number of Interactions should be less than or equal to " + (Integer.parseInt(this.txtNumOfNode.getText()))*(Integer.parseInt(this.txtNumOfNode.getText())-1),"Notice",JOptionPane.WARNING_MESSAGE);
                    return;
                }
                RBNModel="ErdosRenyiVariant";
            }

            

            //JOptionPane.showMessageDialog(Cytoscape.getDesktop(), "Now, creating a RBN with number Of Node: " + myrbn.nodes.size() + ", Number of links: " + myrbn.rndina.size());

            //            myrbn.setRandomUpdateFunction();
            //            myrbn.setRandomInitialState();

            CreateNetworkTask task= new CreateNetworkTask();

            // Configure JTask Dialog Pop-Up Box
            JTaskConfig jTaskConfig = new JTaskConfig();
            jTaskConfig.setOwner(Cytoscape.getDesktop());
            jTaskConfig.displayCloseButton(false);

            jTaskConfig.displayCancelButton(true);

            jTaskConfig.displayStatus(true);

            jTaskConfig.setAutoDispose(true);
            TaskManager.executeTask(task, jTaskConfig);

            if(CreateNetworkTask.successful==false){
                JOptionPane.showMessageDialog(Cytoscape.getDesktop(),"Can not create RBN with chosen parameters. \nPlease increase ratio between number of links and number of nodes and then retry");
                return;
            }else{
                this.dispose();
            }
            
//            Main.workingNetwork=Cytoscape.getCurrentNetwork();
//            Common.calculateNodeDegree(Main.workingNetwork);


        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(Cytoscape.getDesktop(),"Error: " + e.getMessage());
        }
}//GEN-LAST:event_btnCreateNetworkActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgERNVariant;
    private javax.swing.JButton btnCreateNetwork;
    private javax.swing.JComboBox cboRBNModel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblInitNodes;
    private javax.swing.JLabel lblNumIna_ProbIna_MiniIna;
    private javax.swing.JPanel pnlOther;
    public static javax.swing.JRadioButton radMethod0;
    public static javax.swing.JRadioButton radMethod1;
    public static javax.swing.JTextField txtNumInitNode;
    public static javax.swing.JTextField txtNumOfIna;
    public static javax.swing.JTextField txtNumOfNode;
    // End of variables declaration//GEN-END:variables

}
