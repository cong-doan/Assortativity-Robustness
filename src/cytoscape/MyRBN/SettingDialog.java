/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SettingDialog.java
 *
 * Created on May 30, 2012, 5:16:42 PM
 */

package cytoscape.MyRBN;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import myrbn.MyOpenCL;
import myrbn.MyRBN;

/**
 *
 * @author colin
 */
public class SettingDialog extends javax.swing.JDialog {
    private boolean isSaved = false;
    private boolean useOpenCL = false;
    private int platform = -1;
    
    /** Creates new form SettingDialog */
    public SettingDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        if(!MyOpenCL.USE_OPENCL)
        {
            listPlatforms.setEnabled(false);
            listPlatforms.setVisible(false);
            listDevices.setEnabled(false);
            listDevices.setVisible(false);
        }

        useOpenCL = MyOpenCL.USE_OPENCL;
        platform = MyOpenCL.OPENCL_PLATFORM;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rdOneCPU = new javax.swing.JRadioButton();
        rdMulCPU = new javax.swing.JRadioButton();
        rdGPU = new javax.swing.JRadioButton();
        btnOk = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listPlatforms = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textAreaInfos = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listDevices = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Methods:");

        buttonGroup1.add(rdOneCPU);
        rdOneCPU.setText("CPU with one core");
        rdOneCPU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdOneCPUActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdMulCPU);
        rdMulCPU.setText("OPENCL on CPU multi-core");
        rdMulCPU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdMulCPUActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdGPU);
        rdGPU.setText("OpenCL on GPU device");
        rdGPU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdGPUActionPerformed(evt);
            }
        });

        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdGPU)
                    .addComponent(rdOneCPU)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnOk)
                        .addComponent(rdMulCPU)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(rdOneCPU))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdMulCPU)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdGPU)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(btnOk)
                .addContainerGap())
        );

        btnOk.getAccessibleContext().setAccessibleName("btnOke");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "OpenCL Platforms"));

        listPlatforms.setModel(new DefaultListModel());
        listPlatforms.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listPlatforms.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listPlatformsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listPlatforms);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Infos"));

        textAreaInfos.setColumns(20);
        textAreaInfos.setRows(5);
        jScrollPane3.setViewportView(textAreaInfos);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "OPENCL Devices"));

        listDevices.setModel(new DefaultListModel());
        listDevices.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listDevices.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listDevicesValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(listDevices);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        // TODO add your handling code here:
        if(rdOneCPU.isSelected())
        {
            MyOpenCL.USE_OPENCL = false;
        }
        else if(rdMulCPU.isSelected())
        {
            MyOpenCL.USE_OPENCL = true;
            MyOpenCL.OPENCL_PLATFORM = MyOpenCL.CPU_PLATFORM;
        }
        else if(rdGPU.isSelected())
        {
            MyOpenCL.USE_OPENCL = true;
            MyOpenCL.OPENCL_PLATFORM = MyOpenCL.GPU_PLATFORM;
        }

        if(checkPlatform())
        {
            isSaved = true;
            this.dispose();
        }
    }

    private boolean checkPlatform()
    {
        if(MyOpenCL.USE_OPENCL)
        {
            // set OpenCL platform index
            if (MyRBN.myopencl == null)
            {
                MyRBN.myopencl = new MyOpenCL();
            }

            // check platform index
            if(MyRBN.myopencl != null && listPlatforms.getSelectedIndex() >= 0)
            {
                MyRBN.myopencl.setPlatform(listPlatforms.getSelectedIndex());
            }
            else
            {
                JOptionPane.showMessageDialog(this,"You should select an OpenCL platform!", "Error", JOptionPane.ERROR_MESSAGE);
                return false;
            }

            // check device index
            if(MyRBN.myopencl != null && listDevices.getSelectedIndex() >= 0)
            {
                MyRBN.myopencl.setDevice(listDevices.getSelectedIndex());
            }
            else
            {
                JOptionPane.showMessageDialog(this,"You should select an OpenCL device!", "Error", JOptionPane.ERROR_MESSAGE);
                return false;
            }
            
            // reinit OpenCL
            try
            {                               
                MyRBN.myopencl.reInit();
            }
            catch(Exception ex)
            {                
            }

            if(MyOpenCL.init_error == true)
            {
                JOptionPane.showMessageDialog(this,"Error occur when initialize OpenCL. Graphics card might not be installed in your computer! ", "Error", JOptionPane.ERROR_MESSAGE);
                MyOpenCL.USE_OPENCL = false;
                return false;
            }
        }
        /**/        
        return true;
    }//GEN-LAST:event_btnOkActionPerformed

    // events code
    private void rdGPUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdGPUActionPerformed
        // TODO add your handling code here:
        MyOpenCL.USE_OPENCL = true;
        MyOpenCL.OPENCL_PLATFORM = MyOpenCL.GPU_PLATFORM;

        if (listPlatforms.getSelectedIndex() != -1)
        {
            MyRBN.myopencl.adaptListDevices(this);
        }
        
        listPlatforms.setEnabled(true);
        listPlatforms.setVisible(true);
        listDevices.setEnabled(true);
        listDevices.setVisible(true);
    }//GEN-LAST:event_rdGPUActionPerformed

    private void rdOneCPUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdOneCPUActionPerformed
        // TODO add your handling code here:
        MyOpenCL.USE_OPENCL = false;

        listPlatforms.setEnabled(false);
        listPlatforms.setVisible(false);
        listDevices.setEnabled(false);
        listDevices.setVisible(false);
    }//GEN-LAST:event_rdOneCPUActionPerformed

    private void rdMulCPUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdMulCPUActionPerformed
        // TODO add your handling code here:
        MyOpenCL.USE_OPENCL = true;
        MyOpenCL.OPENCL_PLATFORM = MyOpenCL.CPU_PLATFORM;


        if (listPlatforms.getSelectedIndex() != -1)
        {
            MyRBN.myopencl.adaptListDevices(this);
        }
        
        listPlatforms.setEnabled(true);
        listPlatforms.setVisible(true);
        listDevices.setEnabled(true);
        listDevices.setVisible(true);
    }//GEN-LAST:event_rdMulCPUActionPerformed

    private void listPlatformsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listPlatformsValueChanged
        // TODO add your handling code here:
        if (evt.getValueIsAdjusting() == false) {
            if (listPlatforms.getSelectedIndex() != -1) {
                MyRBN.myopencl.setPlatform(listPlatforms.getSelectedIndex());
                MyRBN.myopencl.adaptListDevices(this);
            }
        }
    }//GEN-LAST:event_listPlatformsValueChanged

    private void listDevicesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listDevicesValueChanged
        // TODO add your handling code here:
        if (evt.getValueIsAdjusting() == false) {
            if (listDevices.getSelectedIndex() != -1) {                
                MyRBN.myopencl.adaptListDeviceInfo(this, listDevices.getSelectedIndex());
            }
        }
    }//GEN-LAST:event_listDevicesValueChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if(!isSaved)
        {
            /*MyOpenCL.USE_OPENCL = useOpenCL;
            MyOpenCL.OPENCL_PLATFORM = platform;*/

            if(checkPlatform() == false)
                MyOpenCL.USE_OPENCL = false;
        }
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        //System.out.println("Setting Dialog formWindowOpened");
        MyRBN.myopencl.adaptListPlatforms(this);
    }//GEN-LAST:event_formWindowOpened
    /**/
    
    public void setIndexOfRadioGroup(int selectedIndex)
    {
        buttonGroup1.clearSelection();
        
        switch(selectedIndex)
        {
            case 0:
                rdOneCPU.setSelected(true);                
                break;

            case 1:
                rdMulCPU.setSelected(true);
                break;

            case 2:
                rdGPU.setSelected(true);
                break;
                
            default:
                break;
        }
    }

    public void clearPlatformItem()
    {
        DefaultListModel model = (DefaultListModel) listPlatforms.getModel();
        model.clear();
    }
    
    public void addPlatformItem(String item)
    {
        DefaultListModel model = (DefaultListModel) listPlatforms.getModel();
        model.addElement(item);
    }

    public void clearDeviceItem()
    {
        DefaultListModel model = (DefaultListModel) listDevices.getModel();
        model.clear();

        textAreaInfos.setText(" ");
    }

    public void addDeviceItem(String item)
    {
        DefaultListModel model = (DefaultListModel) listDevices.getModel();
        model.addElement(item);
    }

    public void setDeviceInfo(String info)
    {
        this.textAreaInfos.setText(info);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOk;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList listDevices;
    private javax.swing.JList listPlatforms;
    private javax.swing.JRadioButton rdGPU;
    private javax.swing.JRadioButton rdMulCPU;
    private javax.swing.JRadioButton rdOneCPU;
    private javax.swing.JTextArea textAreaInfos;
    // End of variables declaration//GEN-END:variables

}
